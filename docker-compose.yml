version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: task2-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=task2
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - MAIL_MAILER=log
      - QUEUE_CONNECTION=redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - task2-network

  nginx:
    image: nginx:alpine
    container_name: task2-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - task2-network

  db:
    image: mysql:8.0
    container_name: task2-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: task2
      MYSQL_ROOT_PASSWORD: password
      MYSQL_PASSWORD: password
      MYSQL_USER: task2
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - task2-network

  redis:
    image: redis:7-alpine
    container_name: task2-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - task2-network

  init:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: task2-init
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=task2
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
    command: /var/www/docker/init-project.sh
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - task2-network

  queue:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: task2-queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=task2
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    depends_on:
      - init
    networks:
      - task2-network

  scheduler:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: task2-scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=task2
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
    command: /bin/sh -c "while true; do php artisan schedule:run; sleep 60; done"
    depends_on:
      - init
    networks:
      - task2-network

networks:
  task2-network:
    driver: bridge

volumes:
  dbdata:
    driver: local 